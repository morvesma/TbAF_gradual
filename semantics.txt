arg(a1).
arg(a2).
arg(a3).
arg(a4).
arg(a5).
arg(a6).
arg(a7).
arg(a8).
arg(a9).

value(a1,90).
value(a2,90).
value(a3,100).
value(a4,65).
value(a5,90).
value(a6,90).
value(a7,90).
value(a8,92).
value(a8,100).
value(a9,65).


rel(a6,a9,r1).
rel(a9,a6,r1).
rel(a7,a9,r1).
rel(a9,a7,r1).
rel(a8,a9,r1).
rel(a9,a8,r1).
rel(a6,a7,r2).
rel(a7,a6,r2).
rel(a7,a8,r2).
rel(a8,a7,r2).
rel(a6,a8,r2).
rel(a8,a6,r2).



weak(r1).
stre(r2).

min_value(ARG, X) :- arg(ARG), value(ARG, X), not greater_value(ARG, X).
greater_value(ARG,X):- value(ARG,Y), value(ARG,X), Y < X.

max_value(ARG,X) :- arg(ARG), value(ARG,X), not less_value(ARG, X).
less_value(ARG,X):- value(ARG, Y), value(ARG,X), Y > X.

base_score(ARG, MIN, MAX):- arg(ARG), min_value(ARG,X1), max_value(ARG,X2), MIN=X1, MAX=X2.

mant(ARG):- arg(ARG), rel(ARG,_,_), base_score(ARG, MIN, MAX), LOCA=(MIN+MAX)/2, 
PREC=100-MAX+MIN, COMB_TEMP=LOCA*PREC, COMB=COMB_TEMP/100, COMB<=30. %20 es el valor del threshold

inter_weak(ARG,LB, UB):- arg(ARG), not rel(_,ARG,Y), weak(Y), LB=0, UB=0. %no tiene atacantes

inter_weak(ARG,LB,UB):- arg(ARG), rel(WEAK,ARG,Y), min_value(WEAK,X1), max_value(WEAK,X2), 
weak(Y), not mant(WEAK), LB=X1, UB=X2. 

inter_stre(ARG,LB, UB):- arg(ARG), not rel(_,ARG,Y), stre(Y), LB=0, UB=0.

inter_stre(ARG,LB,UB):- arg(ARG), rel(STRE,ARG,Y), min_value(STRE,X1), max_value(STRE,X2), 
stre(Y), not mant(STRE), LB=X1, UB=X2.

count_weak(ARG, C) :- arg(ARG), C = #count { LB : inter_weak(ARG,LB,UB) }.

count_stre(ARG, C) :- arg(ARG), C = #count { LB : inter_stre(ARG,LB,UB) }.

inter_weak_sum(ARG,LBT,UBT) :- arg(ARG), LBT =#sum { Z, Y: inter_weak(ARG,Z,Y) },
UBT = #sum { Y, Z: inter_weak(ARG,Z,Y) }.

inter_stre_sum(ARG,LBT,UBT) :- arg(ARG), LBT =#sum { Z, Y: inter_stre(ARG,Z,Y) },
UBT = #sum { Y, Z: inter_stre(ARG,Z,Y) }.

average_weak(ARG, LBF, UBF) :- arg(ARG), inter_weak_sum(ARG,LBT,UBT),
count_weak(ARG, C), LBF = LBT/C, UBF = UBT/C.

average_weak(ARG, LBF, UBF) :- arg(ARG), inter_weak_sum(ARG,LBT,UBT),
LBT=0, UBT=0, LBF=0, UBF=0.

average_stre(ARG, LBF, UBF) :- arg(ARG), inter_stre_sum(ARG,LBT,UBT),
count_stre(ARG, C), LBF = LBT/C, UBF = UBT/C.

average_stre(ARG, LBF, UBF) :- arg(ARG), inter_stre_sum(ARG,LBT,UBT),
LBT=0, UBT=0, LBF=0, UBF=0.

strength_temp(ARG, LBT, UBT):- arg(ARG), base_score(ARG, MIN, MAX),
average_stre(ARG, LBF2, UBF2), LBT= MIN+LBF2, UBT=MAX+UBF2.

strength_temp2(ARG, LBD, UBD):- arg(ARG), strength_temp(ARG, LBT, UBT), UBT<=100, LBD=LBT,
UBD=UBT.

strength_temp2(ARG, LBD, UBD):- arg(ARG), strength_temp(ARG, LBT, UBT), UBT>100, X=UBT-100, 
LBT-X >= 0, LBD=LBT-X, UBD=UBT-X.

strength_temp2(ARG, LBD, UBD):- arg(ARG), strength_temp(ARG, LBT, UBT), UBT>100, X=UBT-100,
LBT-X <0, LBD=0, UBD=UBT-X.

strength_temp3(ARG, LBT, UBT):- arg(ARG), strength_temp2(ARG, MIN, MAX),
average_weak(ARG, LBF2, UBF2), LBT= MIN-UBF2, UBT=MAX-LBF2.

strength(ARG, LBF, UBF):- arg(ARG), strength_temp3(ARG, LBT, UBT), LBT>=0, LBF=LBT,
UBF=UBT.

strength(ARG, LBF, UBF):- arg(ARG), strength_temp3(ARG, LBT, UBT), LBT<=0, X=0-LBT, UBT+X<=100,
LBF=LBT+X, UBF=UBT+X.

strength(ARG, LBF, UBF):- arg(ARG), strength_temp3(ARG, LBT, UBT), LBT<=0, X=0-LBT, UBT+X >100,
LBF=LBT+X, UBF=100.

#show strength/3.
